# For documentation see here - https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
version: 0.2

phases:
  install:
    commands:
      - docker --version
  pre_build:
    commands:
      - chown -R 999:999 $CODEBUILD_SRC_DIR
      # Assume the role that has access to perform docker hub operations
      - temp_role=$(aws sts assume-role --role-arn "arn:aws:iam::$AWS_ACCOUNT_ID_NONPROD:role/UECDoSCTPipelineBuildRole" --role-session-name "CodeBuildSession")
      - export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq -r .Credentials.AccessKeyId)
      - export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq -r .Credentials.SecretAccessKey)
      - export AWS_SESSION_TOKEN=$(echo $temp_role | jq -r .Credentials.SessionToken)
      - aws sts get-caller-identity
      # Sign in to Docker Hub
      - make docker-hub-sign-in PROFILE=dev
      # Unset AWS credentials
      - unset AWS_ACCESS_KEY_ID
      - unset AWS_SECRET_ACCESS_KEY
      - unset AWS_SESSION_TOKEN
      # Pull new UI image
      # - make docker-pull NAME=ui VERSION=$CODEBUILD_RESOLVED_SOURCE_VERSION
      # Assume the role that has access to test the application
      - temp_role=$(aws sts assume-role --role-arn "arn:aws:iam::$AWS_ACCOUNT_ID_NONPROD:role/UECDoSCTPipelineBuildRole" --role-session-name "CodeBuildSession")
      - export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq -r .Credentials.AccessKeyId)
      - export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq -r .Credentials.SecretAccessKey)
      - export AWS_SESSION_TOKEN=$(echo $temp_role | jq -r .Credentials.SessionToken)
      - aws sts get-caller-identity
      - make -s tester-build
  build:
    commands:
      - echo "[Testing]"
      - echo ENVIRONMENT=$ENVIRONMENT
      - echo PROFILE=$PROFILE
      - make start PROFILE=$PROFILE ENVIRONMENT=$ENVIRONMENT
      - make end-to-end-tests PROFILE=$PROFILE ENVIRONMENT=$ENVIRONMENT
reports:
  EndToEndTestsReport:
    files:
      - "testresults.json"
    base-directory: $CODEBUILD_SRC_DIR/test/end_to_end
    discard-paths: yes
    file-format: CUCUMBERJSON
